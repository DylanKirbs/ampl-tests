<program> at 1:1.
  <body> at 4:2.
    <statements> at 4:2.
      <statement> at 4:2.
        <output> at 4:2.
        </output> at 4:22.
      </statement> at 4:22.
      <statement> at 5:2.
        <output> at 5:2.
        </output> at 5:27.
      </statement> at 5:27.
      <statement> at 8:2.
        <output> at 8:2.
          <expr> at 8:9.
            <simple> at 8:9.
              <term> at 8:9.
                <factor> at 8:9.
                </factor> at 8:12.
              </term> at 8:12.
            </simple> at 8:12.
            <simple> at 8:15.
              <term> at 8:15.
                <factor> at 8:15.
                </factor> at 8:18.
              </term> at 8:18.
            </simple> at 8:18.
          </expr> at 8:18.
        </output> at 8:33.
      </statement> at 8:33.
      <statement> at 9:2.
        <output> at 9:2.
          <expr> at 9:9.
            <simple> at 9:9.
              <term> at 9:9.
                <factor> at 9:9.
                </factor> at 9:12.
              </term> at 9:12.
            </simple> at 9:12.
            <simple> at 9:14.
              <term> at 9:14.
                <factor> at 9:14.
                </factor> at 9:17.
              </term> at 9:17.
            </simple> at 9:17.
          </expr> at 9:17.
        </output> at 9:33.
      </statement> at 9:33.
      <statement> at 11:2.
        <output> at 11:2.
          <expr> at 11:9.
            <simple> at 11:9.
              <term> at 11:9.
                <factor> at 11:9.
                </factor> at 11:12.
              </term> at 11:12.
            </simple> at 11:12.
            <simple> at 11:14.
              <term> at 11:14.
                <factor> at 11:14.
                </factor> at 11:17.
              </term> at 11:17.
            </simple> at 11:17.
          </expr> at 11:17.
        </output> at 11:32.
      </statement> at 11:32.
      <statement> at 12:2.
        <output> at 12:2.
          <expr> at 12:9.
            <simple> at 12:9.
              <term> at 12:9.
                <factor> at 12:9.
                </factor> at 12:13.
              </term> at 12:13.
            </simple> at 12:13.
            <simple> at 12:15.
              <term> at 12:15.
                <factor> at 12:15.
                </factor> at 12:18.
              </term> at 12:18.
            </simple> at 12:18.
          </expr> at 12:18.
        </output> at 12:34.
      </statement> at 12:34.
      <statement> at 14:2.
        <output> at 14:2.
          <expr> at 14:9.
            <simple> at 14:9.
              <term> at 14:9.
                <factor> at 14:9.
                </factor> at 14:12.
              </term> at 14:12.
            </simple> at 14:12.
            <simple> at 14:14.
              <term> at 14:14.
                <factor> at 14:14.
                </factor> at 14:17.
              </term> at 14:17.
            </simple> at 14:17.
          </expr> at 14:17.
        </output> at 14:33.
      </statement> at 14:33.
      <statement> at 15:2.
        <output> at 15:2.
          <expr> at 15:9.
            <simple> at 15:9.
              <term> at 15:9.
                <factor> at 15:9.
                </factor> at 15:12.
              </term> at 15:12.
            </simple> at 15:12.
            <simple> at 15:14.
              <term> at 15:14.
                <factor> at 15:14.
                </factor> at 15:17.
              </term> at 15:17.
            </simple> at 15:17.
          </expr> at 15:17.
        </output> at 15:32.
      </statement> at 15:32.
      <statement> at 17:2.
        <output> at 17:2.
          <expr> at 17:9.
            <simple> at 17:9.
              <term> at 17:9.
                <factor> at 17:9.
                </factor> at 17:12.
              </term> at 17:12.
            </simple> at 17:12.
            <simple> at 17:14.
              <term> at 17:14.
                <factor> at 17:14.
                </factor> at 17:17.
              </term> at 17:17.
            </simple> at 17:17.
          </expr> at 17:17.
        </output> at 17:32.
      </statement> at 17:32.
      <statement> at 18:2.
        <output> at 18:2.
          <expr> at 18:9.
            <simple> at 18:9.
              <term> at 18:9.
                <factor> at 18:9.
                </factor> at 18:13.
              </term> at 18:13.
            </simple> at 18:13.
            <simple> at 18:15.
              <term> at 18:15.
                <factor> at 18:15.
                </factor> at 18:20.
              </term> at 18:20.
            </simple> at 18:20.
          </expr> at 18:20.
        </output> at 18:36.
      </statement> at 18:36.
      <statement> at 20:2.
        <output> at 20:2.
          <expr> at 20:9.
            <simple> at 20:9.
              <term> at 20:9.
                <factor> at 20:9.
                </factor> at 20:13.
              </term> at 20:13.
            </simple> at 20:13.
            <simple> at 20:16.
              <term> at 20:16.
                <factor> at 20:16.
                </factor> at 20:20.
              </term> at 20:20.
            </simple> at 20:20.
          </expr> at 20:20.
        </output> at 20:35.
      </statement> at 20:35.
      <statement> at 21:2.
        <output> at 21:2.
          <expr> at 21:9.
            <simple> at 21:9.
              <term> at 21:9.
                <factor> at 21:9.
                </factor> at 21:13.
              </term> at 21:13.
            </simple> at 21:13.
            <simple> at 21:16.
              <term> at 21:16.
                <factor> at 21:16.
                </factor> at 21:20.
              </term> at 21:20.
            </simple> at 21:20.
          </expr> at 21:20.
        </output> at 21:36.
      </statement> at 21:36.
      <statement> at 23:2.
        <output> at 23:2.
          <expr> at 23:9.
            <simple> at 23:9.
              <term> at 23:9.
                <factor> at 23:9.
                </factor> at 23:13.
              </term> at 23:13.
            </simple> at 23:13.
            <simple> at 23:16.
              <term> at 23:16.
                <factor> at 23:16.
                </factor> at 23:20.
              </term> at 23:20.
            </simple> at 23:20.
          </expr> at 23:20.
        </output> at 23:36.
      </statement> at 23:36.
      <statement> at 24:2.
        <output> at 24:2.
          <expr> at 24:9.
            <simple> at 24:9.
              <term> at 24:9.
                <factor> at 24:9.
                </factor> at 24:12.
              </term> at 24:12.
            </simple> at 24:12.
            <simple> at 24:15.
              <term> at 24:15.
                <factor> at 24:15.
                </factor> at 24:18.
              </term> at 24:18.
            </simple> at 24:18.
          </expr> at 24:18.
        </output> at 25:1.
      </statement> at 25:1.
    </statements> at 25:1.
  </body> at 25:1.
</program> at 25:1.
Generated: test13.class
.class public test13
.super java/lang/Object

.field private static final charsetName Ljava/lang/String;
.field private static final usLocale Ljava/util/Locale;
.field private static final scanner Ljava/util/Scanner;

.method static public <clinit>()V
.limit stack 5
.limit locals 1 
	ldc	"UTF-8"
	putstatic test13/charsetName Ljava/lang/String;
	new	java/util/Locale
	dup
	ldc	"en"
	ldc	"US"
	invokespecial java/util/Locale/<init>(Ljava/lang/String;Ljava/lang/String;)V
	putstatic test13/usLocale Ljava/util/Locale;
	new	java/util/Scanner
	dup
	new	java/io/BufferedInputStream
	dup
	getstatic java/lang/System/in Ljava/io/InputStream;
	invokespecial java/io/BufferedInputStream/<init>(Ljava/io/InputStream;)V
	getstatic test13/charsetName Ljava/lang/String;
	invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;Ljava/lang/String;)V
	putstatic test13/scanner Ljava/util/Scanner;
	getstatic test13/scanner Ljava/util/Scanner;
	getstatic test13/usLocale Ljava/util/Locale;
	invokevirtual java/util/Scanner/useLocale(Ljava/util/Locale;)Ljava/util/Scanner;
	pop
	return
.end method

.method public <init>()V
	aload_0
	invokespecial java/lang/Object/<init>()V
	return
.end method

.method public static readInt()I
.limit stack 1
.limit locals 1
	getstatic test13/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/nextInt()I
	ireturn
.end method

.method public static readBoolean()Z
.limit stack 2
.limit locals 1
	getstatic test13/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/next()Ljava/lang/String;
	astore 0
	aload 0
	ldc	"true"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq False
	iconst_1
	ireturn
False:
	aload 0
	ldc	"false"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq Exception
	iconst_0
	ireturn
Exception:
	new	java/util/InputMismatchException
	dup
	invokespecial java/util/InputMismatchException/<init>()V
	athrow
.end method

.method public static main([Ljava/lang/String;)V
.limit stack 64
.limit locals 1
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "Relop\t \n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "-----\t -----\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 48
	ldc 19
	if_icmpne L1
	ldc 0
	goto L2
L1:
	ldc 1
L2:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 48
	ldc 48
	if_icmpne L3
	ldc 0
	goto L4
L3:
	ldc 1
L4:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 48
	ldc 59
	if_icmplt L5
	ldc 0
	goto L6
L5:
	ldc 1
L6:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 109
	ldc 86
	if_icmplt L7
	ldc 0
	goto L8
L7:
	ldc 1
L8:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 45
	ldc 50
	if_icmpeq L9
	ldc 0
	goto L10
L9:
	ldc 1
L10:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 50
	ldc 50
	if_icmpeq L11
	ldc 0
	goto L12
L11:
	ldc 1
L12:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 78
	ldc 23
	if_icmpgt L13
	ldc 0
	goto L14
L13:
	ldc 1
L14:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 100
	ldc 1000
	if_icmpgt L15
	ldc 0
	goto L16
L15:
	ldc 1
L16:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 169
	ldc 169
	if_icmpge L17
	ldc 0
	goto L18
L17:
	ldc 1
L18:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 150
	ldc 175
	if_icmpge L19
	ldc 0
	goto L20
L19:
	ldc 1
L20:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 810
	ldc 180
	if_icmple L21
	ldc 0
	goto L22
L21:
	ldc 1
L22:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 21
	ldc 21
	if_icmple L23
	ldc 0
	goto L24
L23:
	ldc 1
L24:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	return
.end method

Success!
