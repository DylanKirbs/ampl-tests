<program> at 1:1.
  <body> at 4:9.
    <vardef> at 4:9.
      <type> at 4:9.
      </type> at 4:19.
    </vardef> at 5:9.
    <vardef> at 5:9.
      <type> at 5:9.
      </type> at 5:13.
    </vardef> at 7:9.
    <statements> at 7:9.
      <statement> at 7:9.
        <assign> at 7:9.
          <simple> at 7:26.
            <term> at 7:26.
              <factor> at 7:26.
              </factor> at 7:28.
            </term> at 7:28.
          </simple> at 7:28.
        </assign> at 7:28.
      </statement> at 7:28.
      <statement> at 9:9.
        <assign> at 9:9.
          <index> at 9:17.
            <simple> at 9:18.
              <term> at 9:18.
                <factor> at 9:18.
                </factor> at 9:19.
              </term> at 9:19.
            </simple> at 9:19.
          </index> at 9:21.
          <expr> at 9:23.
            <simple> at 9:23.
              <term> at 9:23.
                <factor> at 9:23.
                </factor> at 9:25.
              </term> at 9:25.
            </simple> at 9:25.
          </expr> at 9:25.
        </assign> at 9:25.
      </statement> at 9:25.
      <statement> at 10:9.
        <assign> at 10:9.
          <index> at 10:17.
            <simple> at 10:18.
              <term> at 10:18.
                <factor> at 10:18.
                </factor> at 10:19.
              </term> at 10:19.
            </simple> at 10:19.
          </index> at 10:21.
          <expr> at 10:23.
            <simple> at 10:23.
              <term> at 10:23.
                <factor> at 10:23.
                </factor> at 10:25.
              </term> at 10:25.
            </simple> at 10:25.
          </expr> at 10:25.
        </assign> at 10:25.
      </statement> at 10:25.
      <statement> at 11:9.
        <assign> at 11:9.
          <index> at 11:17.
            <simple> at 11:18.
              <term> at 11:18.
                <factor> at 11:18.
                </factor> at 11:19.
              </term> at 11:19.
            </simple> at 11:19.
          </index> at 11:21.
          <expr> at 11:23.
            <simple> at 11:23.
              <term> at 11:23.
                <factor> at 11:23.
                </factor> at 11:25.
              </term> at 11:25.
            </simple> at 11:25.
          </expr> at 11:25.
        </assign> at 11:25.
      </statement> at 11:25.
      <statement> at 12:9.
        <assign> at 12:9.
          <index> at 12:17.
            <simple> at 12:18.
              <term> at 12:18.
                <factor> at 12:18.
                </factor> at 12:19.
              </term> at 12:19.
            </simple> at 12:19.
          </index> at 12:21.
          <expr> at 12:23.
            <simple> at 12:23.
              <term> at 12:23.
                <factor> at 12:23.
                </factor> at 12:26.
              </term> at 12:26.
            </simple> at 12:26.
          </expr> at 12:26.
        </assign> at 12:26.
      </statement> at 12:26.
      <statement> at 13:9.
        <assign> at 13:9.
          <index> at 13:17.
            <simple> at 13:18.
              <term> at 13:18.
                <factor> at 13:18.
                </factor> at 13:19.
              </term> at 13:19.
            </simple> at 13:19.
          </index> at 13:21.
          <expr> at 13:23.
            <simple> at 13:23.
              <term> at 13:23.
                <factor> at 13:23.
                </factor> at 13:24.
              </term> at 13:24.
            </simple> at 13:24.
          </expr> at 13:24.
        </assign> at 13:24.
      </statement> at 13:24.
      <statement> at 14:9.
        <assign> at 14:9.
          <index> at 14:17.
            <simple> at 14:18.
              <term> at 14:18.
                <factor> at 14:18.
                </factor> at 14:19.
              </term> at 14:19.
            </simple> at 14:19.
          </index> at 14:21.
          <expr> at 14:23.
            <simple> at 14:23.
              <term> at 14:23.
                <factor> at 14:23.
                </factor> at 14:27.
              </term> at 14:27.
            </simple> at 14:27.
          </expr> at 14:27.
        </assign> at 14:27.
      </statement> at 14:27.
      <statement> at 15:9.
        <assign> at 15:9.
          <index> at 15:17.
            <simple> at 15:18.
              <term> at 15:18.
                <factor> at 15:18.
                </factor> at 15:19.
              </term> at 15:19.
            </simple> at 15:19.
          </index> at 15:21.
          <expr> at 15:23.
            <simple> at 15:23.
              <term> at 15:23.
                <factor> at 15:23.
                </factor> at 15:24.
              </term> at 15:24.
            </simple> at 15:24.
          </expr> at 15:24.
        </assign> at 15:24.
      </statement> at 15:24.
      <statement> at 16:9.
        <assign> at 16:9.
          <index> at 16:17.
            <simple> at 16:18.
              <term> at 16:18.
                <factor> at 16:18.
                </factor> at 16:19.
              </term> at 16:19.
            </simple> at 16:19.
          </index> at 16:21.
          <expr> at 16:23.
            <simple> at 16:23.
              <term> at 16:24.
                <factor> at 16:24.
                </factor> at 16:25.
              </term> at 16:25.
            </simple> at 16:25.
          </expr> at 16:25.
        </assign> at 16:25.
      </statement> at 16:25.
      <statement> at 17:9.
        <assign> at 17:9.
          <index> at 17:17.
            <simple> at 17:18.
              <term> at 17:18.
                <factor> at 17:18.
                </factor> at 17:19.
              </term> at 17:19.
            </simple> at 17:19.
          </index> at 17:21.
          <expr> at 17:23.
            <simple> at 17:23.
              <term> at 17:23.
                <factor> at 17:23.
                </factor> at 17:26.
              </term> at 17:26.
            </simple> at 17:26.
          </expr> at 17:26.
        </assign> at 17:26.
      </statement> at 17:26.
      <statement> at 18:9.
        <assign> at 18:9.
          <index> at 18:17.
            <simple> at 18:18.
              <term> at 18:18.
                <factor> at 18:18.
                </factor> at 18:19.
              </term> at 18:19.
            </simple> at 18:19.
          </index> at 18:21.
          <expr> at 18:23.
            <simple> at 18:23.
              <term> at 18:24.
                <factor> at 18:24.
                </factor> at 18:25.
              </term> at 18:25.
            </simple> at 18:25.
          </expr> at 18:25.
        </assign> at 18:25.
      </statement> at 18:25.
      <statement> at 20:9.
        <assign> at 20:9.
          <expr> at 20:17.
            <simple> at 20:17.
              <term> at 20:17.
                <factor> at 20:17.
                </factor> at 20:18.
              </term> at 20:18.
            </simple> at 20:18.
          </expr> at 20:18.
        </assign> at 20:18.
      </statement> at 20:18.
      <statement> at 21:9.
        <while> at 21:9.
          <expr> at 21:15.
            <simple> at 21:15.
              <term> at 21:15.
                <factor> at 21:15.
                </factor> at 21:17.
              </term> at 21:17.
            </simple> at 21:17.
            <simple> at 21:19.
              <term> at 21:19.
                <factor> at 21:19.
                </factor> at 21:21.
              </term> at 21:21.
            </simple> at 21:21.
          </expr> at 21:21.
          <statements> at 22:13.
            <statement> at 22:13.
              <if> at 22:13.
                <expr> at 22:16.
                  <simple> at 22:16.
                    <term> at 22:16.
                      <factor> at 22:16.
                        <index> at 22:20.
                          <simple> at 22:21.
                            <term> at 22:21.
                              <factor> at 22:21.
                              </factor> at 22:22.
                            </term> at 22:22.
                          </simple> at 22:22.
                        </index> at 22:24.
                      </factor> at 22:24.
                      <factor> at 22:28.
                      </factor> at 22:30.
                    </term> at 22:30.
                  </simple> at 22:30.
                  <simple> at 22:32.
                    <term> at 22:32.
                      <factor> at 22:32.
                      </factor> at 22:33.
                    </term> at 22:33.
                  </simple> at 22:33.
                </expr> at 22:33.
                <statements> at 23:17.
                  <statement> at 23:17.
                    <output> at 23:17.
                      <expr> at 23:24.
                        <simple> at 23:24.
                          <term> at 23:24.
                            <factor> at 23:24.
                              <index> at 23:28.
                                <simple> at 23:29.
                                  <term> at 23:29.
                                    <factor> at 23:29.
                                    </factor> at 23:30.
                                  </term> at 23:30.
                                </simple> at 23:30.
                              </index> at 23:32.
                            </factor> at 23:32.
                          </term> at 23:32.
                        </simple> at 23:32.
                      </expr> at 23:32.
                    </output> at 24:13.
                  </statement> at 24:13.
                </statements> at 24:13.
                <else> at 24:13.
                <statements> at 25:17.
                  <statement> at 25:17.
                    <output> at 25:17.
                      <expr> at 25:24.
                        <simple> at 25:24.
                          <term> at 25:24.
                            <factor> at 25:24.
                              <index> at 25:28.
                                <simple> at 25:29.
                                  <term> at 25:29.
                                    <factor> at 25:29.
                                    </factor> at 25:30.
                                  </term> at 25:30.
                                </simple> at 25:30.
                              </index> at 25:32.
                            </factor> at 25:32.
                          </term> at 25:32.
                        </simple> at 25:32.
                      </expr> at 25:32.
                    </output> at 26:13.
                  </statement> at 26:13.
                </statements> at 26:13.
                </else> at 26:13.
              </if> at 26:16.
            </statement> at 26:16.
            <statement> at 27:13.
              <assign> at 27:13.
                <expr> at 27:21.
                  <simple> at 27:21.
                    <term> at 27:21.
                      <factor> at 27:21.
                      </factor> at 27:23.
                    </term> at 27:23.
                    <term> at 27:25.
                      <factor> at 27:25.
                      </factor> at 27:26.
                    </term> at 27:26.
                  </simple> at 27:26.
                </expr> at 27:26.
              </assign> at 27:26.
            </statement> at 27:26.
            <statement> at 28:13.
              <output> at 28:13.
              </output> at 29:9.
            </statement> at 29:9.
          </statements> at 29:9.
        </while> at 29:12.
      </statement> at 29:12.
    </statements> at 29:12.
  </body> at 29:12.
</program> at 29:12.
Generated: test47.class
.class public test47
.super java/lang/Object

.field private static final charsetName Ljava/lang/String;
.field private static final usLocale Ljava/util/Locale;
.field private static final scanner Ljava/util/Scanner;

.method static public <clinit>()V
.limit stack 5
.limit locals 1 
	ldc	"UTF-8"
	putstatic test47/charsetName Ljava/lang/String;
	new	java/util/Locale
	dup
	ldc	"en"
	ldc	"US"
	invokespecial java/util/Locale/<init>(Ljava/lang/String;Ljava/lang/String;)V
	putstatic test47/usLocale Ljava/util/Locale;
	new	java/util/Scanner
	dup
	new	java/io/BufferedInputStream
	dup
	getstatic java/lang/System/in Ljava/io/InputStream;
	invokespecial java/io/BufferedInputStream/<init>(Ljava/io/InputStream;)V
	getstatic test47/charsetName Ljava/lang/String;
	invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;Ljava/lang/String;)V
	putstatic test47/scanner Ljava/util/Scanner;
	getstatic test47/scanner Ljava/util/Scanner;
	getstatic test47/usLocale Ljava/util/Locale;
	invokevirtual java/util/Scanner/useLocale(Ljava/util/Locale;)Ljava/util/Scanner;
	pop
	return
.end method

.method public <init>()V
	aload_0
	invokespecial java/lang/Object/<init>()V
	return
.end method

.method public static readInt()I
.limit stack 1
.limit locals 1
	getstatic test47/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/nextInt()I
	ireturn
.end method

.method public static readBoolean()Z
.limit stack 2
.limit locals 1
	getstatic test47/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/next()Ljava/lang/String;
	astore 0
	aload 0
	ldc	"true"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq False
	iconst_1
	ireturn
False:
	aload 0
	ldc	"false"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq Exception
	iconst_0
	ireturn
Exception:
	new	java/util/InputMismatchException
	dup
	invokespecial java/util/InputMismatchException/<init>()V
	athrow
.end method

.method public static main([Ljava/lang/String;)V
.limit stack 13
.limit locals 3
	ldc 10
	newarray int
	astore 1
	aload 1
	ldc 0
	ldc 42
	iastore
	aload 1
	ldc 1
	ldc 11
	iastore
	aload 1
	ldc 2
	ldc 83
	iastore
	aload 1
	ldc 3
	ldc 102
	iastore
	aload 1
	ldc 4
	ldc 0
	iastore
	aload 1
	ldc 5
	ldc 2173
	iastore
	aload 1
	ldc 6
	ldc 2
	iastore
	aload 1
	ldc 7
	ldc 8
	ineg
	iastore
	aload 1
	ldc 8
	ldc 100
	iastore
	aload 1
	ldc 9
	ldc 3
	ineg
	iastore
	ldc 0
	istore 2
L1:
	iload 2
	ldc 10
	if_icmplt L3
	ldc 0
	goto L4
L3:
	ldc 1
L4:
	ifeq L2
	aload 1
	iload 2
	iaload
	ldc 2
	irem
	ldc 0
	if_icmpeq L7
	ldc 0
	goto L8
L7:
	ldc 1
L8:
	ifeq L6
	aload 1
	iload 2
	iaload
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(I)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc " is even\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	goto L5
L6:
	aload 1
	iload 2
	iaload
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(I)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc " is odd\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
L5:
	iload 2
	ldc 1
	iadd
	istore 2
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	goto L1
L2:
	return
.end method

Success!
