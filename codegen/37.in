program test37:
length(int array a) -> int:
	int pos;
	let pos = 0;
	while (a[pos] /= 0) :
		let pos = pos + 1
	end;
	return pos

join(int array a, int array b) -> int array:
	int array out;
	int len_a, len_b, len_out, pos;

	let len_a = length(a);
	let len_b = length(b);
	let len_out = len_a + len_b;
	let pos = 0;
	let out = array len_out + 1;

	while (pos < len_a):
		let out[pos] = a[pos];
		let pos = pos + 1
	end;
	
	while (pos < len_out):
		let out[pos] = b[pos - len_a];
		let pos = pos + 1
	end;

	let out[pos] = 0;

	return out

print(int array text):
	int i, c;
	let i = 0;
	while (text[i] /= 0):
		let c = text[i];
		if c = 9: output ("\t")
		elif c = 10: output ("\n")
		elif c = 32: output (" ")
		elif c = 33: output ("!")
		elif c = 34: output ("\"")
		elif c = 35: output ("\n")
		elif c = 35: output ("#")
		elif c = 36: output ("$")
		elif c = 37: output ("%")
		elif c = 38: output ("&")
		elif c = 39: output ("'")
		elif c = 40: output ("(")
		elif c = 41: output (")")
		elif c = 42: output ("*")
		elif c = 43: output ("+")
		elif c = 44: output (",")
		elif c = 45: output ("-")
		elif c = 46: output (".")
		elif c = 47: output ("/")
		elif c = 48: output ("0")
		elif c = 49: output ("1")
		elif c = 50: output ("2")
		elif c = 51: output ("3")
		elif c = 52: output ("4")
		elif c = 53: output ("5")
		elif c = 54: output ("6")
		elif c = 55: output ("7")
		elif c = 56: output ("8")
		elif c = 57: output ("9")
		elif c = 58: output (":")
		elif c = 59: output (";")
		elif c = 60: output ("<")
		elif c = 61: output ("=")
		elif c = 62: output (">")
		elif c = 63: output ("?")
		elif c = 64: output ("@")
		elif c = 65: output ("A")
		elif c = 66: output ("B")
		elif c = 67: output ("C")
		elif c = 68: output ("D")
		elif c = 69: output ("E")
		elif c = 70: output ("F")
		elif c = 71: output ("G")
		elif c = 72: output ("H")
		elif c = 73: output ("I")
		elif c = 74: output ("J")
		elif c = 75: output ("K")
		elif c = 76: output ("L")
		elif c = 77: output ("M")
		elif c = 78: output ("N")
		elif c = 79: output ("O")
		elif c = 80: output ("P")
		elif c = 81: output ("Q")
		elif c = 82: output ("R")
		elif c = 83: output ("S")
		elif c = 84: output ("T")
		elif c = 85: output ("U")
		elif c = 86: output ("V")
		elif c = 87: output ("W")
		elif c = 88: output ("X")
		elif c = 89: output ("Y")
		elif c = 90: output ("Z")
		elif c = 91: output ("[")
		elif c = 92: output ("\\")
		elif c = 93: output ("]")
		elif c = 94: output ("^")
		elif c = 95: output ("_")
		elif c = 96: output ("`")
		elif c = 97: output ("a")
		elif c = 98: output ("b")
		elif c = 99: output ("c")
		elif c = 100: output ("d")
		elif c = 101: output ("e")
		elif c = 102: output ("f")
		elif c = 103: output ("g")
		elif c = 104: output ("h")
		elif c = 105: output ("i")
		elif c = 106: output ("j")
		elif c = 107: output ("k")
		elif c = 108: output ("l")
		elif c = 109: output ("m")
		elif c = 110: output ("n")
		elif c = 111: output ("o")
		elif c = 112: output ("p")
		elif c = 113: output ("q")
		elif c = 114: output ("r")
		elif c = 115: output ("s")
		elif c = 116: output ("t")
		elif c = 117: output ("u")
		elif c = 118: output ("v")
		elif c = 119: output ("w")
		elif c = 120: output ("x")
		elif c = 121: output ("y")
		elif c = 122: output ("z")
		elif c = 123: output ("{")
		elif c = 124: output ("|")
		elif c = 125: output ("}")
		elif c = 126: output ("~")
		else: chillax
		end;
		let i = i + 1
	end

main:
	int array x, y, z;
	int i, j;

	output("Join the following strings:\n(with int arrays!)\n\n\"");
	let x = array 500;
	let x[  0 ] = 1;
	let x[  1 ] = 76;
	let x[  2 ] = 111;
	let x[  3 ] = 114;
	let x[  4 ] = 101;
	let x[  5 ] = 109;
	let x[  6 ] = 32;
	let x[  7 ] = 105;
	let x[  8 ] = 112;
	let x[  9 ] = 115;
	let x[ 10 ] = 117;
	let x[ 11 ] = 109;
	let x[ 12 ] = 32;
	let x[ 13 ] = 100;
	let x[ 14 ] = 111;
	let x[ 15 ] = 108;
	let x[ 16 ] = 111;
	let x[ 17 ] = 114;
	let x[ 18 ] = 32;
	let x[ 19 ] = 115;
	let x[ 20 ] = 105;
	let x[ 21 ] = 116;
	let x[ 22 ] = 32;
	let x[ 23 ] = 97;
	let x[ 24 ] = 109;
	let x[ 25 ] = 101;
	let x[ 26 ] = 116;
	let x[ 27 ] = 32;
	let x[ 28 ] = 97;
	let x[ 29 ] = 110;
	let x[ 30 ] = 105;
	let x[ 31 ] = 109;
	let x[ 32 ] = 32;
	let x[ 33 ] = 113;
	let x[ 34 ] = 117;
	let x[ 35 ] = 105;
	let x[ 36 ] = 115;
	let x[ 37 ] = 32;
	let x[ 38 ] = 115;
	let x[ 39 ] = 105;
	let x[ 40 ] = 110;
	let x[ 41 ] = 116;
	let x[ 42 ] = 32;
	let x[ 43 ] = 99;
	let x[ 44 ] = 117;
	let x[ 45 ] = 108;
	let x[ 46 ] = 112;
	let x[ 47 ] = 97;
	let x[ 48 ] = 32;
	let x[ 49 ] = 113;
	let x[ 50 ] = 117;
	let x[ 51 ] = 105;
	let x[ 52 ] = 115;
	let x[ 53 ] = 32;
	let x[ 54 ] = 97;
	let x[ 55 ] = 108;
	let x[ 56 ] = 105;
	let x[ 57 ] = 113;
	let x[ 58 ] = 117;
	let x[ 59 ] = 105;
	let x[ 60 ] = 112;
	let x[ 61 ] = 32;
	let x[ 62 ] = 100;
	let x[ 63 ] = 117;
	let x[ 64 ] = 105;
	let x[ 65 ] = 115;
	let x[ 66 ] = 32;
	let x[ 67 ] = 108;
	let x[ 68 ] = 97;
	let x[ 69 ] = 98;
	let x[ 70 ] = 111;
	let x[ 71 ] = 114;
	let x[ 72 ] = 105;
	let x[ 73 ] = 115;
	let x[ 74 ] = 32;
	let x[ 75 ] = 97;
	let x[ 76 ] = 108;
	let x[ 77 ] = 105;
	let x[ 78 ] = 113;
	let x[ 79 ] = 117;
	let x[ 80 ] = 105;
	let x[ 81 ] = 112;
	let x[ 82 ] = 32;
	let x[ 83 ] = 100;
	let x[ 84 ] = 111;
	let x[ 85 ] = 108;
	let x[ 86 ] = 111;
	let x[ 87 ] = 114;
	let x[ 88 ] = 101;
	let x[ 89 ] = 32;
	let x[ 90 ] = 100;
	let x[ 91 ] = 117;
	let x[ 92 ] = 105;
	let x[ 93 ] = 115;
	let x[ 94 ] = 32;
	let x[ 95 ] = 109;
	let x[ 96 ] = 105;
	let x[ 97 ] = 110;
	let x[ 98 ] = 105;
	let x[ 99 ] = 109;
	let x[100 ] = 32;
	let x[101 ] = 105;
	let x[102 ] = 114;
	let x[103 ] = 117;
	let x[104 ] = 114;
	let x[105 ] = 101;
	let x[106 ] = 32;
	let x[107 ] = 100;
	let x[108 ] = 111;
	let x[109 ] = 46;
	let x[110 ] = 32;
	let x[111 ] = 67;
	let x[112 ] = 111;
	let x[113 ] = 110;
	let x[114 ] = 115;
	let x[115 ] = 101;
	let x[116 ] = 113;
	let x[117 ] = 117;
	let x[118 ] = 97;
	let x[119 ] = 116;
	let x[120 ] = 32;
	let x[121 ] = 117;
	let x[122 ] = 108;
	let x[123 ] = 108;
	let x[124 ] = 97;
	let x[125 ] = 109;
	let x[126 ] = 99;
	let x[127 ] = 111;
	let x[128 ] = 32;
	let x[129 ] = 97;
	let x[130 ] = 108;
	let x[131 ] = 105;
	let x[132 ] = 113;
	let x[133 ] = 117;
	let x[134 ] = 97;
	let x[135 ] = 32;
	let x[136 ] = 101;
	let x[137 ] = 110;
	let x[138 ] = 105;
	let x[139 ] = 109;
	let x[140 ] = 32;
	let x[141 ] = 99;
	let x[142 ] = 111;
	let x[143 ] = 110;
	let x[144 ] = 115;
	let x[145 ] = 101;
	let x[146 ] = 113;
	let x[147 ] = 117;
	let x[148 ] = 97;
	let x[149 ] = 116;
	let x[150 ] = 32;
	let x[151 ] = 110;
	let x[152 ] = 105;
	let x[153 ] = 115;
	let x[154 ] = 105;
	let x[155 ] = 32;
	let x[156 ] = 113;
	let x[157 ] = 117;
	let x[158 ] = 105;
	let x[159 ] = 115;
	let x[160 ] = 32;
	let x[161 ] = 115;
	let x[162 ] = 105;
	let x[163 ] = 116;
	let x[164 ] = 32;
	let x[165 ] = 102;
	let x[166 ] = 117;
	let x[167 ] = 103;
	let x[168 ] = 105;
	let x[169 ] = 97;
	let x[170 ] = 116;
	let x[171 ] = 32;
	let x[172 ] = 105;
	let x[173 ] = 112;
	let x[174 ] = 115;
	let x[175 ] = 117;
	let x[176 ] = 109;
	let x[177 ] = 32;
	let x[178 ] = 116;
	let x[179 ] = 101;
	let x[180 ] = 109;
	let x[181 ] = 112;
	let x[182 ] = 111;
	let x[183 ] = 114;
	let x[184 ] = 32;
	let x[185 ] = 118;
	let x[186 ] = 101;
	let x[187 ] = 108;
	let x[188 ] = 105;
	let x[189 ] = 116;
	let x[190 ] = 44;
	let x[191 ] = 32;
	let x[192 ] = 101;
	let x[193 ] = 115;
	let x[194 ] = 116;
	let x[195 ] = 32;
	let x[196 ] = 101;
	let x[197 ] = 117;
	let x[198 ] = 32;
	let x[199 ] = 100;
	let x[200 ] = 117;
	let x[201 ] = 105;
	let x[202 ] = 115;
	let x[203 ] = 32;
	let x[204 ] = 110;
	let x[205 ] = 117;
	let x[206 ] = 108;
	let x[207 ] = 108;
	let x[208 ] = 97;
	let x[209 ] = 32;
	let x[210 ] = 100;
	let x[211 ] = 111;
	let x[212 ] = 32;
	let x[213 ] = 100;
	let x[214 ] = 111;
	let x[215 ] = 108;
	let x[216 ] = 111;
	let x[217 ] = 114;
	let x[218 ] = 32;
	let x[219 ] = 115;
	let x[220 ] = 105;
	let x[221 ] = 116;
	let x[222 ] = 32;
	let x[223 ] = 100;
	let x[224 ] = 101;
	let x[225 ] = 115;
	let x[226 ] = 101;
	let x[227 ] = 114;
	let x[228 ] = 117;
	let x[229 ] = 110;
	let x[230 ] = 116;
	let x[231 ] = 32;
	let x[232 ] = 101;
	let x[233 ] = 116;
	let x[234 ] = 32;
	let x[235 ] = 97;
	let x[236 ] = 109;
	let x[237 ] = 101;
	let x[238 ] = 116;
	let x[239 ] = 32;
	let x[240 ] = 113;
	let x[241 ] = 117;
	let x[242 ] = 105;
	let x[243 ] = 32;
	let x[244 ] = 101;
	let x[245 ] = 105;
	let x[246 ] = 117;
	let x[247 ] = 115;
	let x[248 ] = 109;
	let x[249 ] = 111;
	let x[250 ] = 100;
	let x[251 ] = 46;
	let x[252 ] = 7;
	let x[253 ] = 8;
	let x[253 ] = 0;
	print(x);
	output("\"\n\n\"");
	let y = array 500;
	let y[  0 ] = 7;
	let y[  1 ] = 76;
	let y[  2 ] = 111;
	let y[  3 ] = 114;
	let y[  4 ] = 101;
	let y[  5 ] = 109;
	let y[  6 ] = 32;
	let y[  7 ] = 105;
	let y[  8 ] = 112;
	let y[  9 ] = 115;
	let y[ 10 ] = 117;
	let y[ 11 ] = 109;
	let y[ 12 ] = 32;
	let y[ 13 ] = 100;
	let y[ 14 ] = 111;
	let y[ 15 ] = 108;
	let y[ 16 ] = 111;
	let y[ 17 ] = 114;
	let y[ 18 ] = 32;
	let y[ 19 ] = 115;
	let y[ 20 ] = 105;
	let y[ 21 ] = 116;
	let y[ 22 ] = 32;
	let y[ 23 ] = 97;
	let y[ 24 ] = 109;
	let y[ 25 ] = 101;
	let y[ 26 ] = 116;
	let y[ 27 ] = 32;
	let y[ 28 ] = 101;
	let y[ 29 ] = 105;
	let y[ 30 ] = 117;
	let y[ 31 ] = 115;
	let y[ 32 ] = 109;
	let y[ 33 ] = 111;
	let y[ 34 ] = 100;
	let y[ 35 ] = 32;
	let y[ 36 ] = 97;
	let y[ 37 ] = 117;
	let y[ 38 ] = 116;
	let y[ 39 ] = 101;
	let y[ 40 ] = 32;
	let y[ 41 ] = 105;
	let y[ 42 ] = 100;
	let y[ 43 ] = 32;
	let y[ 44 ] = 99;
	let y[ 45 ] = 117;
	let y[ 46 ] = 112;
	let y[ 47 ] = 105;
	let y[ 48 ] = 100;
	let y[ 49 ] = 97;
	let y[ 50 ] = 116;
	let y[ 51 ] = 97;
	let y[ 52 ] = 116;
	let y[ 53 ] = 44;
	let y[ 54 ] = 32;
	let y[ 55 ] = 100;
	let y[ 56 ] = 117;
	let y[ 57 ] = 105;
	let y[ 58 ] = 115;
	let y[ 59 ] = 32;
	let y[ 60 ] = 101;
	let y[ 61 ] = 115;
	let y[ 62 ] = 115;
	let y[ 63 ] = 101;
	let y[ 64 ] = 32;
	let y[ 65 ] = 109;
	let y[ 66 ] = 105;
	let y[ 67 ] = 110;
	let y[ 68 ] = 105;
	let y[ 69 ] = 109;
	let y[ 70 ] = 32;
	let y[ 71 ] = 97;
	let y[ 72 ] = 100;
	let y[ 73 ] = 105;
	let y[ 74 ] = 112;
	let y[ 75 ] = 105;
	let y[ 76 ] = 115;
	let y[ 77 ] = 105;
	let y[ 78 ] = 99;
	let y[ 79 ] = 105;
	let y[ 80 ] = 110;
	let y[ 81 ] = 103;
	let y[ 82 ] = 32;
	let y[ 83 ] = 101;
	let y[ 84 ] = 116;
	let y[ 85 ] = 32;
	let y[ 86 ] = 112;
	let y[ 87 ] = 114;
	let y[ 88 ] = 111;
	let y[ 89 ] = 105;
	let y[ 90 ] = 100;
	let y[ 91 ] = 101;
	let y[ 92 ] = 110;
	let y[ 93 ] = 116;
	let y[ 94 ] = 32;
	let y[ 95 ] = 99;
	let y[ 96 ] = 111;
	let y[ 97 ] = 110;
	let y[ 98 ] = 115;
	let y[ 99 ] = 101;
	let y[100 ] = 99;
	let y[101 ] = 116;
	let y[102 ] = 101;
	let y[103 ] = 116;
	let y[104 ] = 117;
	let y[105 ] = 114;
	let y[106 ] = 32;
	let y[107 ] = 101;
	let y[108 ] = 120;
	let y[109 ] = 99;
	let y[110 ] = 101;
	let y[111 ] = 112;
	let y[112 ] = 116;
	let y[113 ] = 101;
	let y[114 ] = 117;
	let y[115 ] = 114;
	let y[116 ] = 32;
	let y[117 ] = 115;
	let y[118 ] = 117;
	let y[119 ] = 110;
	let y[120 ] = 116;
	let y[121 ] = 32;
	let y[122 ] = 99;
	let y[123 ] = 111;
	let y[124 ] = 110;
	let y[125 ] = 115;
	let y[126 ] = 101;
	let y[127 ] = 113;
	let y[128 ] = 117;
	let y[129 ] = 97;
	let y[130 ] = 116;
	let y[131 ] = 32;
	let y[132 ] = 118;
	let y[133 ] = 101;
	let y[134 ] = 110;
	let y[135 ] = 105;
	let y[136 ] = 97;
	let y[137 ] = 109;
	let y[138 ] = 32;
	let y[139 ] = 118;
	let y[140 ] = 111;
	let y[141 ] = 108;
	let y[142 ] = 117;
	let y[143 ] = 112;
	let y[144 ] = 116;
	let y[145 ] = 97;
	let y[146 ] = 116;
	let y[147 ] = 101;
	let y[148 ] = 32;
	let y[149 ] = 113;
	let y[150 ] = 117;
	let y[151 ] = 105;
	let y[152 ] = 115;
	let y[153 ] = 46;
	let y[154 ] = 32;
	let y[155 ] = 70;
	let y[156 ] = 117;
	let y[157 ] = 103;
	let y[158 ] = 105;
	let y[159 ] = 97;
	let y[160 ] = 116;
	let y[161 ] = 32;
	let y[162 ] = 101;
	let y[163 ] = 97;
	let y[164 ] = 32;
	let y[165 ] = 115;
	let y[166 ] = 105;
	let y[167 ] = 110;
	let y[168 ] = 116;
	let y[169 ] = 32;
	let y[170 ] = 102;
	let y[171 ] = 117;
	let y[172 ] = 103;
	let y[173 ] = 105;
	let y[174 ] = 97;
	let y[175 ] = 116;
	let y[176 ] = 32;
	let y[177 ] = 114;
	let y[178 ] = 101;
	let y[179 ] = 112;
	let y[180 ] = 114;
	let y[181 ] = 101;
	let y[182 ] = 104;
	let y[183 ] = 101;
	let y[184 ] = 110;
	let y[185 ] = 100;
	let y[186 ] = 101;
	let y[187 ] = 114;
	let y[188 ] = 105;
	let y[189 ] = 116;
	let y[190 ] = 32;
	let y[191 ] = 97;
	let y[192 ] = 100;
	let y[193 ] = 105;
	let y[194 ] = 112;
	let y[195 ] = 105;
	let y[196 ] = 115;
	let y[197 ] = 105;
	let y[198 ] = 99;
	let y[199 ] = 105;
	let y[200 ] = 110;
	let y[201 ] = 103;
	let y[202 ] = 32;
	let y[203 ] = 97;
	let y[204 ] = 117;
	let y[205 ] = 116;
	let y[206 ] = 101;
	let y[207 ] = 32;
	let y[208 ] = 105;
	let y[209 ] = 112;
	let y[210 ] = 115;
	let y[211 ] = 117;
	let y[212 ] = 109;
	let y[213 ] = 32;
	let y[214 ] = 117;
	let y[215 ] = 108;
	let y[216 ] = 108;
	let y[217 ] = 97;
	let y[218 ] = 109;
	let y[219 ] = 99;
	let y[220 ] = 111;
	let y[221 ] = 32;
	let y[222 ] = 100;
	let y[223 ] = 101;
	let y[224 ] = 115;
	let y[225 ] = 101;
	let y[226 ] = 114;
	let y[227 ] = 117;
	let y[228 ] = 110;
	let y[229 ] = 116;
	let y[230 ] = 32;
	let y[231 ] = 116;
	let y[232 ] = 101;
	let y[233 ] = 109;
	let y[234 ] = 112;
	let y[235 ] = 111;
	let y[236 ] = 114;
	let y[237 ] = 32;
	let y[238 ] = 100;
	let y[239 ] = 111;
	let y[240 ] = 108;
	let y[241 ] = 111;
	let y[242 ] = 114;
	let y[243 ] = 32;
	let y[244 ] = 118;
	let y[245 ] = 111;
	let y[246 ] = 108;
	let y[247 ] = 117;
	let y[248 ] = 112;
	let y[249 ] = 116;
	let y[250 ] = 97;
	let y[251 ] = 116;
	let y[252 ] = 101;
	let y[253 ] = 32;
	let y[254 ] = 99;
	let y[255 ] = 117;
	let y[256 ] = 112;
	let y[257 ] = 105;
	let y[258 ] = 100;
	let y[259 ] = 97;
	let y[260 ] = 116;
	let y[261 ] = 97;
	let y[262 ] = 116;
	let y[263 ] = 32;
	let y[264 ] = 115;
	let y[265 ] = 105;
	let y[266 ] = 110;
	let y[267 ] = 116;
	let y[268 ] = 32;
	let y[269 ] = 100;
	let y[270 ] = 111;
	let y[271 ] = 32;
	let y[272 ] = 109;
	let y[273 ] = 97;
	let y[274 ] = 103;
	let y[275 ] = 110;
	let y[276 ] = 97;
	let y[277 ] = 32;
	let y[278 ] = 99;
	let y[279 ] = 111;
	let y[280 ] = 109;
	let y[281 ] = 109;
	let y[282 ] = 111;
	let y[283 ] = 100;
	let y[284 ] = 111;
	let y[285 ] = 32;
	let y[286 ] = 108;
	let y[287 ] = 97;
	let y[288 ] = 98;
	let y[289 ] = 111;
	let y[290 ] = 114;
	let y[291 ] = 101;
	let y[292 ] = 46;
	let y[293 ] = 7;
	let y[294 ] = 8;
	let y[295 ] = 0;
	print(y);
	output("\"\n\n");
	output("\nRESULT:\n\"");
	let z = join(x, y);
	print(z);
	output("\"\n")