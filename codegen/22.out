<program> at 1:1.
  <body> at 3:5.
    <vardef> at 3:5.
      <type> at 3:5.
      </type> at 3:16.
    </vardef> at 4:5.
    <vardef> at 4:5.
      <type> at 4:5.
      </type> at 4:10.
    </vardef> at 6:5.
    <statements> at 6:5.
      <statement> at 6:5.
        <assign> at 6:5.
          <expr> at 6:14.
            <simple> at 6:14.
              <term> at 6:14.
                <factor> at 6:14.
                </factor> at 6:18.
              </term> at 6:18.
            </simple> at 6:18.
          </expr> at 6:18.
        </assign> at 6:18.
      </statement> at 6:18.
      <statement> at 7:5.
        <assign> at 7:5.
          <expr> at 7:14.
            <simple> at 7:14.
              <term> at 7:14.
                <factor> at 7:14.
                </factor> at 7:18.
              </term> at 7:18.
            </simple> at 7:18.
          </expr> at 7:18.
        </assign> at 7:18.
      </statement> at 7:18.
      <statement> at 8:5.
        <assign> at 8:5.
          <expr> at 8:14.
            <simple> at 8:14.
              <term> at 8:14.
                <factor> at 8:14.
                </factor> at 8:19.
              </term> at 8:19.
            </simple> at 8:19.
          </expr> at 8:19.
        </assign> at 8:19.
      </statement> at 8:19.
      <statement> at 10:5.
        <assign> at 10:5.
          <simple> at 10:21.
            <term> at 10:21.
              <factor> at 10:21.
              </factor> at 10:23.
            </term> at 10:23.
          </simple> at 10:23.
        </assign> at 10:23.
      </statement> at 10:23.
      <statement> at 11:5.
        <assign> at 11:5.
          <simple> at 11:21.
            <term> at 11:21.
              <factor> at 11:21.
              </factor> at 11:23.
            </term> at 11:23.
          </simple> at 11:23.
        </assign> at 11:23.
      </statement> at 11:23.
      <statement> at 13:5.
        <assign> at 13:5.
          <index> at 13:12.
            <simple> at 13:13.
              <term> at 13:13.
                <factor> at 13:13.
                </factor> at 13:14.
              </term> at 13:14.
            </simple> at 13:14.
          </index> at 13:16.
          <expr> at 13:18.
            <simple> at 13:18.
              <term> at 13:18.
                <factor> at 13:18.
                </factor> at 13:20.
              </term> at 13:20.
            </simple> at 13:20.
          </expr> at 13:20.
        </assign> at 13:20.
      </statement> at 13:20.
      <statement> at 14:5.
        <assign> at 14:5.
          <index> at 14:12.
            <simple> at 14:13.
              <term> at 14:13.
                <factor> at 14:13.
                </factor> at 14:14.
              </term> at 14:14.
            </simple> at 14:14.
          </index> at 14:16.
          <expr> at 14:18.
            <simple> at 14:18.
              <term> at 14:18.
                <factor> at 14:18.
                </factor> at 14:20.
              </term> at 14:20.
            </simple> at 14:20.
          </expr> at 14:20.
        </assign> at 14:20.
      </statement> at 14:20.
      <statement> at 15:5.
        <assign> at 15:5.
          <index> at 15:12.
            <simple> at 15:13.
              <term> at 15:13.
                <factor> at 15:13.
                </factor> at 15:14.
              </term> at 15:14.
            </simple> at 15:14.
          </index> at 15:16.
          <expr> at 15:18.
            <simple> at 15:18.
              <term> at 15:18.
                <factor> at 15:18.
                </factor> at 15:20.
              </term> at 15:20.
            </simple> at 15:20.
          </expr> at 15:20.
        </assign> at 15:20.
      </statement> at 15:20.
      <statement> at 17:5.
        <assign> at 17:5.
          <expr> at 17:15.
            <simple> at 17:15.
              <term> at 17:15.
                <factor> at 17:15.
                </factor> at 17:18.
              </term> at 17:18.
            </simple> at 17:18.
          </expr> at 17:18.
        </assign> at 17:18.
      </statement> at 17:18.
      <statement> at 20:5.
        <if> at 20:5.
          <expr> at 20:8.
            <simple> at 20:8.
              <term> at 20:8.
                <factor> at 20:8.
                  <expr> at 20:9.
                    <simple> at 20:9.
                      <term> at 20:9.
                        <factor> at 20:9.
                          <index> at 20:12.
                            <simple> at 20:13.
                              <term> at 20:13.
                                <factor> at 20:13.
                                </factor> at 20:14.
                              </term> at 20:14.
                            </simple> at 20:14.
                          </index> at 20:15.
                        </factor> at 20:15.
                      </term> at 20:15.
                    </simple> at 20:15.
                  </expr> at 20:15.
                </factor> at 20:17.
              </term> at 20:17.
            </simple> at 20:17.
          </expr> at 20:17.
          <statements> at 21:9.
            <statement> at 21:9.
              <output> at 21:9.
              </output> at 22:5.
            </statement> at 22:5.
          </statements> at 22:5.
          <elif> at 22:5.
          <expr> at 22:10.
            <simple> at 22:10.
              <term> at 22:10.
                <factor> at 22:10.
                  <expr> at 22:11.
                    <simple> at 22:11.
                      <term> at 22:11.
                        <factor> at 22:11.
                        </factor> at 22:13.
                      </term> at 22:13.
                    </simple> at 22:13.
                  </expr> at 22:13.
                </factor> at 22:15.
              </term> at 22:15.
            </simple> at 22:15.
          </expr> at 22:15.
          <statements> at 23:9.
            <statement> at 23:9.
              <output> at 23:9.
              </output> at 24:5.
            </statement> at 24:5.
          </statements> at 24:5.
          </elif> at 24:5.
          <elif> at 24:5.
          <expr> at 24:10.
            <simple> at 24:10.
              <term> at 24:10.
                <factor> at 24:10.
                  <expr> at 24:11.
                    <simple> at 24:11.
                      <term> at 24:11.
                        <factor> at 24:11.
                          <index> at 24:14.
                            <simple> at 24:15.
                              <term> at 24:15.
                                <factor> at 24:15.
                                </factor> at 24:16.
                              </term> at 24:16.
                            </simple> at 24:16.
                          </index> at 24:17.
                        </factor> at 24:17.
                      </term> at 24:17.
                    </simple> at 24:17.
                  </expr> at 24:17.
                </factor> at 24:19.
              </term> at 24:19.
            </simple> at 24:19.
          </expr> at 24:19.
          <statements> at 25:9.
            <statement> at 25:9.
              <output> at 25:9.
              </output> at 26:5.
            </statement> at 26:5.
          </statements> at 26:5.
          </elif> at 26:5.
          <elif> at 26:5.
          <expr> at 26:10.
            <simple> at 26:10.
              <term> at 26:10.
                <factor> at 26:10.
                  <expr> at 26:11.
                    <simple> at 26:11.
                      <term> at 26:11.
                        <factor> at 26:11.
                          <index> at 26:14.
                            <simple> at 26:15.
                              <term> at 26:15.
                                <factor> at 26:15.
                                </factor> at 26:16.
                              </term> at 26:16.
                            </simple> at 26:16.
                          </index> at 26:17.
                        </factor> at 26:17.
                      </term> at 26:17.
                    </simple> at 26:17.
                  </expr> at 26:17.
                </factor> at 26:19.
              </term> at 26:19.
            </simple> at 26:19.
          </expr> at 26:19.
          <statements> at 27:9.
            <statement> at 27:9.
              <output> at 27:9.
              </output> at 28:5.
            </statement> at 28:5.
          </statements> at 28:5.
          </elif> at 28:5.
          <else> at 28:5.
          <statements> at 29:9.
            <statement> at 29:9.
              <output> at 29:9.
              </output> at 30:5.
            </statement> at 30:5.
          </statements> at 30:5.
          </else> at 30:5.
        </if> at 31:1.
      </statement> at 31:1.
    </statements> at 31:1.
  </body> at 31:1.
</program> at 31:1.
Generated: test22.class
.class public test22
.super java/lang/Object

.field private static final charsetName Ljava/lang/String;
.field private static final usLocale Ljava/util/Locale;
.field private static final scanner Ljava/util/Scanner;

.method static public <clinit>()V
.limit stack 5
.limit locals 1 
	ldc	"UTF-8"
	putstatic test22/charsetName Ljava/lang/String;
	new	java/util/Locale
	dup
	ldc	"en"
	ldc	"US"
	invokespecial java/util/Locale/<init>(Ljava/lang/String;Ljava/lang/String;)V
	putstatic test22/usLocale Ljava/util/Locale;
	new	java/util/Scanner
	dup
	new	java/io/BufferedInputStream
	dup
	getstatic java/lang/System/in Ljava/io/InputStream;
	invokespecial java/io/BufferedInputStream/<init>(Ljava/io/InputStream;)V
	getstatic test22/charsetName Ljava/lang/String;
	invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;Ljava/lang/String;)V
	putstatic test22/scanner Ljava/util/Scanner;
	getstatic test22/scanner Ljava/util/Scanner;
	getstatic test22/usLocale Ljava/util/Locale;
	invokevirtual java/util/Scanner/useLocale(Ljava/util/Locale;)Ljava/util/Scanner;
	pop
	return
.end method

.method public <init>()V
	aload_0
	invokespecial java/lang/Object/<init>()V
	return
.end method

.method public static readInt()I
.limit stack 1
.limit locals 1
	getstatic test22/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/nextInt()I
	ireturn
.end method

.method public static readBoolean()Z
.limit stack 2
.limit locals 1
	getstatic test22/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/next()Ljava/lang/String;
	astore 0
	aload 0
	ldc	"true"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq False
	iconst_1
	ireturn
False:
	aload 0
	ldc	"false"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq Exception
	iconst_0
	ireturn
Exception:
	new	java/util/InputMismatchException
	dup
	invokespecial java/util/InputMismatchException/<init>()V
	athrow
.end method

.method public static main([Ljava/lang/String;)V
.limit stack 10
.limit locals 6
	ldc 1
	istore 3
	ldc 1
	istore 4
	ldc 0
	istore 5
	ldc 10
	newarray int
	astore 1
	ldc 10
	newarray int
	astore 2
	aload 1
	ldc 1
	iload 3
	iastore
	aload 1
	ldc 2
	iload 4
	iastore
	aload 1
	ldc 3
	iload 5
	iastore
	aload 1
	astore 2
	aload 2
	ldc 3
	iaload
	ifeq L2
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "if1 \n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	goto L1
L2:
	iload 5
	ifeq L3
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "if2 \n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	goto L1
L3:
	aload 2
	ldc 2
	iaload
	ifeq L4
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "if3 \n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	goto L1
L4:
	aload 2
	ldc 1
	iaload
	ifeq L5
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "if4 \n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	goto L1
L5:
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "ifelse \n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
L1:
	return
.end method

Success!
