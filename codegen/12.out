<program> at 1:1.
  <body> at 3:2.
    <statements> at 3:2.
      <statement> at 3:2.
        <output> at 3:2.
          <expr> at 3:9.
            <simple> at 3:9.
              <term> at 3:9.
                <factor> at 3:9.
                </factor> at 3:14.
              </term> at 3:14.
              <term> at 3:17.
                <factor> at 3:17.
                </factor> at 3:23.
              </term> at 3:23.
            </simple> at 3:23.
          </expr> at 3:23.
        </output> at 3:37.
      </statement> at 3:37.
      <statement> at 4:2.
        <output> at 4:2.
          <expr> at 4:9.
            <simple> at 4:9.
              <term> at 4:9.
                <factor> at 4:9.
                </factor> at 4:14.
              </term> at 4:14.
              <term> at 4:17.
                <factor> at 4:17.
                </factor> at 4:22.
              </term> at 4:22.
            </simple> at 4:22.
          </expr> at 4:22.
        </output> at 4:37.
      </statement> at 4:37.
      <statement> at 5:2.
        <output> at 5:2.
          <expr> at 5:9.
            <simple> at 5:9.
              <term> at 5:9.
                <factor> at 5:9.
                </factor> at 5:15.
              </term> at 5:15.
              <term> at 5:18.
                <factor> at 5:18.
                </factor> at 5:24.
              </term> at 5:24.
            </simple> at 5:24.
          </expr> at 5:24.
        </output> at 5:40.
      </statement> at 5:40.
      <statement> at 6:2.
        <output> at 6:2.
        </output> at 6:14.
      </statement> at 6:14.
      <statement> at 8:2.
        <output> at 8:2.
          <expr> at 8:9.
            <simple> at 8:9.
              <term> at 8:9.
                <factor> at 8:9.
                </factor> at 8:14.
                <factor> at 8:18.
                </factor> at 8:24.
              </term> at 8:24.
            </simple> at 8:24.
          </expr> at 8:24.
        </output> at 8:40.
      </statement> at 8:40.
      <statement> at 9:2.
        <output> at 9:2.
          <expr> at 9:9.
            <simple> at 9:9.
              <term> at 9:9.
                <factor> at 9:9.
                </factor> at 9:14.
                <factor> at 9:18.
                </factor> at 9:23.
              </term> at 9:23.
            </simple> at 9:23.
          </expr> at 9:23.
        </output> at 9:38.
      </statement> at 9:38.
      <statement> at 10:2.
        <output> at 10:2.
          <expr> at 10:9.
            <simple> at 10:9.
              <term> at 10:9.
                <factor> at 10:9.
                </factor> at 10:15.
                <factor> at 10:19.
                </factor> at 10:24.
              </term> at 10:24.
            </simple> at 10:24.
          </expr> at 10:24.
        </output> at 10:38.
      </statement> at 10:38.
      <statement> at 11:2.
        <output> at 11:2.
        </output> at 11:14.
      </statement> at 11:14.
    </statements> at 11:14.
  </body> at 11:14.
</program> at 11:14.
Generated: test12.class
.class public test12
.super java/lang/Object

.field private static final charsetName Ljava/lang/String;
.field private static final usLocale Ljava/util/Locale;
.field private static final scanner Ljava/util/Scanner;

.method static public <clinit>()V
.limit stack 5
.limit locals 1 
	ldc	"UTF-8"
	putstatic test12/charsetName Ljava/lang/String;
	new	java/util/Locale
	dup
	ldc	"en"
	ldc	"US"
	invokespecial java/util/Locale/<init>(Ljava/lang/String;Ljava/lang/String;)V
	putstatic test12/usLocale Ljava/util/Locale;
	new	java/util/Scanner
	dup
	new	java/io/BufferedInputStream
	dup
	getstatic java/lang/System/in Ljava/io/InputStream;
	invokespecial java/io/BufferedInputStream/<init>(Ljava/io/InputStream;)V
	getstatic test12/charsetName Ljava/lang/String;
	invokespecial java/util/Scanner/<init>(Ljava/io/InputStream;Ljava/lang/String;)V
	putstatic test12/scanner Ljava/util/Scanner;
	getstatic test12/scanner Ljava/util/Scanner;
	getstatic test12/usLocale Ljava/util/Locale;
	invokevirtual java/util/Scanner/useLocale(Ljava/util/Locale;)Ljava/util/Scanner;
	pop
	return
.end method

.method public <init>()V
	aload_0
	invokespecial java/lang/Object/<init>()V
	return
.end method

.method public static readInt()I
.limit stack 1
.limit locals 1
	getstatic test12/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/nextInt()I
	ireturn
.end method

.method public static readBoolean()Z
.limit stack 2
.limit locals 1
	getstatic test12/scanner Ljava/util/Scanner;
	invokevirtual java/util/Scanner/next()Ljava/lang/String;
	astore 0
	aload 0
	ldc	"true"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq False
	iconst_1
	ireturn
False:
	aload 0
	ldc	"false"
	invokevirtual java/lang/String/equalsIgnoreCase(Ljava/lang/String;)Z
	ifeq Exception
	iconst_0
	ireturn
Exception:
	new	java/util/InputMismatchException
	dup
	invokespecial java/util/InputMismatchException/<init>()V
	athrow
.end method

.method public static main([Ljava/lang/String;)V
.limit stack 28
.limit locals 1
	ldc 1
	ldc 0
	ior
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 1
	ldc 1
	ior
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 0
	ldc 0
	ior
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 1
	ldc 0
	iand
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false\t"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 1
	ldc 1
	iand
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t true\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	ldc 0
	ldc 1
	iand
	getstatic java/lang/System/out Ljava/io/PrintStream;
	swap
	invokevirtual java/io/PrintStream/print(Z)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\t false"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	getstatic java/lang/System/out Ljava/io/PrintStream;
	ldc "\n"
	invokevirtual java/io/PrintStream/print(Ljava/lang/String;)V
	return
.end method

Success!
